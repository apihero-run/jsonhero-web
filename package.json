{
  "private": true,
  "name": "@jsonhero/jsonhero-web",
  "description": "A beautiful JSON viewer for the web",
  "license": "apache-2.0",
  "type": "module",
  "scripts": {
    "clean": "rimraf dist public/build public/entry.worker.js build app/tailwind.css .cache .wrangler",
    "watch:app": "remix vite:dev",
    "watch:css": "tailwindcss -i ./styles/tailwind.css -o ./app/tailwind.css --watch",
    "watch:worker": "wrangler dev --env dev",
    "watch:search": "esbuild ./app/entry.worker.ts --outfile=./public/entry.worker.js --bundle --format=esm --define:process.env.NODE_ENV='\"development\"' --watch",
    "dev": "npm run build && concurrently 'npm run watch:css' 'npm run watch:search' 'npm run watch:app' 'npm run watch:worker'",
    "build:css": "tailwindcss -i ./styles/tailwind.css -o ./app/tailwind.css --minify",
    "build:app": "remix vite:build",
    "build:worker": "esbuild ./worker --outdir=dist --minify --bundle --sourcemap --define:process.env.NODE_ENV='\"production\"' ",
    "build:search": "esbuild ./app/entry.worker.ts --outfile=./public/entry.worker.js --bundle --format=esm --define:process.env.NODE_ENV='\"production\"'",
    "build:worker:analyze": "esbuild ./worker --outdir=dist --minify --bundle --sourcemap --metafile=meta.json --define:process.env.NODE_ENV='\"production\"' ",
    "build:visualize": "npm run clean && npm run build && npm run build:worker:analyze && esbuild-visualizer --metadata ./meta.json",
    "build": "npm run build:css && npm run build:app && npm run build:worker && npm run build:search",
    "deploy:dev": "npm run build && wrangler publish --env dev",
    "deploy:production": "npm run build && wrangler publish",
    "test": "jest",
    "test:watch": "jest --watch",
    "test:coverage": "jest --coverage",
    "build:types": "tsc",
    "build:types:watch": "tsc --watch",
    "lint": "npm run build:types"
  },
  "dependencies": {
    "@apihero/fetch": "^0.1.0",
    "@codemirror/lang-json": "^6.0.1",
    "@heroicons/react": "^1.0.6",
    "@js-temporal/polyfill": "^0.4.4",
    "@jsonhero/fuzzy-json-search": "^0.2.2",
    "@jsonhero/json-infer-types": "^1.2.11",
    "@jsonhero/json-schema-fns": "^0.0.1",
    "@jsonhero/path": "^1.0.21",
    "@jsonhero/schema-infer": "^0.1.5",
    "@radix-ui/react-dialog": "^1.1.1",
    "@radix-ui/react-popover": "^1.1.1",
    "@radix-ui/react-tabs": "^1.1.0",
    "@radix-ui/react-toast": "1.1.5",
    "@remix-run/cloudflare": "^2.10.0",
    "@remix-run/cloudflare-workers": "^2.10.0",
    "@remix-run/react": "^2.10.0",
    "@remix-run/serve": "^2.10.0",
    "@swan-io/boxed": "^2.3.0",
    "@tanstack/react-virtual": "^3.7.0",
    "@uiw/react-codemirror": "^4.22.2",
    "@xmldom/xmldom": "^0.8.10",
    "clsx": "^2.1.1",
    "color": "^4.2.3",
    "downshift": "^9.0.6",
    "fathom-client": "^3.7.0",
    "framer-motion": "^11.2.12",
    "isbot": "^4.4.0",
    "json-source-map": "^0.6.1",
    "jwt-decode": "^4.0.0",
    "lodash-es": "^4.17.21",
    "nanoid": "^5.0.7",
    "react": "^18.3.1",
    "react-dom": "^18.3.1",
    "react-dropzone-esm": "^15.0.1",
    "react-hotkeys-hook": "^4.5.0",
    "react-use-intercom": "^5.4.1",
    "remix": "^2.10.0",
    "tailwindcss-radix": "^3.0.3",
    "tiny-invariant": "^1.3.3",
    "ts-pattern": "^5.2.0"
  },
  "devDependencies": {
    "@cloudflare/workers-types": "^4.20240620.0",
    "@mdx-js/rollup": "^3.0.1",
    "@remix-run/dev": "^2.10.0",
    "@tailwindcss/forms": "^0.5.7",
    "@types/color": "^3.0.6",
    "@types/jest": "^29.5.12",
    "@types/lodash-es": "^4.17.12",
    "@types/react": "^18.3.3",
    "@types/react-dom": "^18.3.0",
    "@types/ua-parser-js": "^0.7.39",
    "concurrently": "^8.2.2",
    "esbuild-visualizer": "^0.6.0",
    "jest": "^29.7.0",
    "miniflare": "^3.20240610.1",
    "patch-package": "^8.0.0",
    "rimraf": "^5.0.7",
    "tailwindcss": "^3.4.4",
    "ts-jest": "^29.1.5",
    "typescript": "^5.5.2",
    "vite": "^5.3.1",
    "vite-tsconfig-paths": "^4.3.2",
    "wrangler": "^3.62.0"
  },
  "engines": {
    "node": ">=14"
  },
  "jest": {
    "preset": "ts-jest",
    "testEnvironment": "node",
    "coverageReporters": [
      "json-summary",
      "text",
      "lcov"
    ],
    "moduleNameMapper": {
      "^~/(.*)$": "<rootDir>/app/$1",
      "^lodash-es$": "lodash"
    },
    "globals": {
      "ts-jest": {
        "tsconfig": "tsconfig.json"
      }
    },
    "globalSetup": "./tests/setup.js"
  },
  "sideEffects": false,
  "main": "dist/worker.js"
}
